Connexion :
    - Admin : numero_identification et mot_de_passe

Admin :
    ETAPE 1:
    - Faire un investissement :
        - choisir produit à investir
            => Investir produit : (input : id_client, id_investi,montant, date, durre)
            Begin Transaction :
                - Ajout MouvementCompteBancaireClient :
                        * type_mouvement => Fond investissement
                        * montant =  - montant investi
                        * date_mouvement = date ==  null ? aujourd'hui : date
                - Ajout MouvementCompteBancaireEtablissement :
                        * TypeMouvementEF => Gain Fond
                        * montant =  + montant investi
                        * date_mouvement = date ==  null ? aujourd'hui : date
                - FondInvestiParClient :
                        * id_produit_investi
                        * montant_investi = motant
                        * date_investissement = date ==  null ? aujourd'hui : date
                *** Regle de Gestion :
                    - Possible si :
                        - Etats compte banque client  à la date >= montant
                        => Produit_investi = date_changement (Mouvement_Produit) = id_produit
                        - Produit_investi.durre_maximale >= durre
                            &&  Produit_investi.durre_minimal <= durre
                            &&  Produit_investi.depot_minimum <= montant
                            &&  Produit_investi.depot_maximal >= montant
                        - Unique Investissement Produit Client

    - cree un contrat :
        => Input (id_client, type_remboursement, type_pret, taux_revenu, duree_retour, montant_pret)
            * id_client
            * id_type_rembourssement
            * id_type_pret
            * taux_revenues
            * durre_retour_pret
            * montant_pret
            * echeance = (P * r) / (1 - (1 + r)^-n)
                 - P = montant_pret
                 - r = taux_revenues / type_rembourssement.repetition_annuel
                 - n = contrat.durre_retour_pret
            * uuid = ??

            *** Regle de gestion :
                _ client existe
                _ taux_revenu >= type_pret.taux_revenues_min &&
                taux_revenu <= type_pret.taux_revenues_max


    - Approbation contrat :
        choisir contrat :
            => Input (id_contrat, date, delai_remboursement)
            if accepter contrat :
                Begin Transaction :
                    - Ajout MouvStatusContrat :
                        status_contrat : valider
                        date : date == null ? aujourd'hui : date

                    - Ajout pret :
                        * montant_pret = contrat.montant_pret
                        * nombre_periode = (contrat.durre_retour_pret / 12) * contrat.type_rembourssement.repetition_annuel
                        * due_periodique_avec_interet = contrat.echeance
                        * due_periodique_assurance = (taux_assurance / type_rembourssement.repetition_annuel) * contrat.montant_pret
                        * montant_finale_rembourser = due_periodique_avec_interet * nombre_periode
                        * date_debut_empreint = date
                        * date_fin_empreint = date_debut_empreint + contrat.durre_retour_pret

                    - Ajout MouvementCompteBancaireClient :
                                            * type_mouvement => Pret
                                            * montant =  + montant investi
                                            * date_mouvement = date ==  null ? aujourd'hui : date

                    - Ajout MouvementCompteBancaireEtablissement :
                            * TypeMouvementEF => Sortis Pret
                            * montant =  - montant investi
                            * date_mouvement = date ==  null ? aujourd'hui : date
                    C = contrat.montant_pret
                    - for i = 1 => nombre_periode :
                        - Ajout MouvementCompteBancaireClient :
                            * type_mouvement => Rembourssement Pret
                            * montant =  - due_periodique_avec_interet
                            * date_mouvement.mois = date.mois + i * (12 / contrat.type_rembourssement.repetition_annuel) + delai_remboursement
                        - Ajout MouvementCompteBancaireEtablissement :
                            * TypeMouvementEF => Sortis Pret
                            * montant =  + due_periodique_avec_interet
                            * date_mouvement.mois = date.mois + i * (12 / contrat.type_rembourssement.repetition_annuel) + delai_remboursement
                        - Ajout RetourPret :
                               * index_period = i
                               * date_retour = date.mois + i * (12 / contrat.type_rembourssement.repetition_annuel) + delai_remboursement
                               * total_due = contrat.echeance + due_peridique_assurance
                               * interet = C * (contrat.taux_revenu / contrat.type_rembourssement.repetition_annuel)
                               * Capital remboursé = contrat.echeance - interet
                               * Nouveau capital restant dû = C - Capital remboursé

                        C = Nouveau capital restant dû
                    fin for
           else :
                - Ajout MouvStatusContrat :
                    status_contrat : valider

    ETAPE 3:
    - Liste Client => Fiche Client (info client
                                    + MouvementCompteBancaireClient
                                    + MouvementActiviteClient)

    - Liste PretClient / FondInvestiParClient :
        => Filtre :
            Par TypePret /  Produit_investi,
            Date de creation

    - Tableau et graphe des intérêt par pret par EF :
        - Afficher les graphes interet pour tous les prets de l'EF:
            => Input (date_min, date_max)
            for i entre date_min et date_max
                liste_interet[i] <- somme des interets des RetourPret au mois i
            retourne liste_interets

        - Afficher les graphes interets pour un seul prets:
            => Input (contrat, date_min, date_max)
            for i entre date_min et date_max
                liste_interet[i] <- somme des interets des RetourPret dont le id est id_pretclient au mois i
            retourne liste_interets

    ETAPE 4:
        - Simulation d'un pret via contrat:
            Avant valider
            => Input (contrat, date_min, date_max)
            A partir d'ici, tout est simulation:
                - Ajout pret :
                    * montant_pret = contrat.montant_pret
                    * nombre_periode = (contrat.durre_retour_pret / 12) * contrat.type_rembourssement.repetition_annuel
                    * due_periodique_avec_interet = contrat.echeance
                    * due_periodique_assurance = (taux_assurance / type_rembourssement.repetition_annuel) * contrat.montant_pret
                    * montant_finale_rembourser = due_periodique_avec_interet * nombre_periode
                    * date_debut_empreint = date
                    * date_fin_empreint = date_debut_empreint + contrat.durre_retour_pret

                C = contrat.montant_pret
                - for i = 1 => nombre_periode :
                    - Ajout RetourPret :
                           * index_period = i
                           * interet = C * (contrat.taux_revenu / contrat.type_rembourssement.repetition_annuel)
                           * Capital remboursé = contrat.echeance - interet
                           * Nouveau capital restant dû = C - Capital remboursé
                    C = Nouveau capital restant dû
                fin for
                for i entre date_min et date_max
                    liste_interet[i] <- somme des interets des RetourPret dont le id est id_pretclient au mois i
                retourne [
                    liste_interet,
                    pret
                ]

        - Liste contrat non Valider :
            verifier si le dernier id_statut_contrat == 2

        - génerer pdf pour client

        -




    EXTRA
    - Consulter le solde :
        MouvementCompteBancaireEtablissement

    - Fiche PretClient / FondInvestiParClient :
        PretClient: Join contrat Join Retour Pret
        Fond : Produit_investi
